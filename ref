template:
http://recursivechaos.com/blog/spring-boot-jpa-mysql/
https://github.com/netgloo/spring-boot-samples/tree/master/spring-boot-mysql-springdatajpa-hibernate

install mysql in ubuntu

https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-16-04

https://askubuntu.com/questions/82374/how-do-i-start-stop-mysql-server


run

http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-running-your-application.html

modify

change:
spring.jpa.hibernate.ddl-auto = update
to:
spring.jpa.hibernate.ddl-auto = create

then change back:

spring.jpa.hibernate.ddl-auto = update


test in postman



POST:

Header:
Content-Type:                  application/x-www-form-urlencoded

Body:

choose: x-www-form-urlencoded

add field.

PUT : save as "POST"


SECURITY:

ref:

set in momory user password and role:

http://docs.spring.io/spring-security/site/docs/current/guides/html5/helloworld-javaconfig.html

WebSecurityConfigurerAdapter:

http://docs.spring.io/spring-security/site/docs/current/guides/html5/form-javaconfig.html


add userdetail:

http://www.mkyong.com/spring-security/spring-security-hibernate-annotation-example/



CREATE  TABLE credentials (
  credentialname VARCHAR(45) NOT NULL ,
  password VARCHAR(60) NOT NULL ,
  enabled TINYINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (credentialname));

CREATE TABLE credential_roles (
  credential_role_id int(11) NOT NULL AUTO_INCREMENT,
  credentialname varchar(45) NOT NULL,
  role varchar(45) NOT NULL,
  PRIMARY KEY (credential_role_id),
  UNIQUE KEY uni_credentialname_role (role,credentialname),
  KEY fk_credentialname_idx (credentialname),
  CONSTRAINT fk_credentialname FOREIGN KEY (credentialname) REFERENCES credentials (credentialname));

INSERT INTO credentials(credentialname,password,enabled)
VALUES ('dif','$2a$10$04TVADrR6/SPLBjsK0N30.Jf5fNjBugSACeGv1S69dZALR7lSov0y', true);
INSERT INTO credentials(credentialname,password,enabled)
VALUES ('mike','$2a$10$04TVADrR6/SPLBjsK0N30.Jf5fNjBugSACeGv1S69dZALR7lSov0y', true);

INSERT INTO credential_roles (credentialname, role)
VALUES ('dif', 'ROLE_USER');
INSERT INTO credential_roles (credentialname, role)
VALUES ('dif', 'ROLE_ADMIN');
INSERT INTO credential_roles (credentialname, role)
VALUES ('mike', 'ROLE_USER');

ref:

http://www.mkyong.com/spring-security/spring-security-hibernate-xml-example/



ref: 
http://www.programming-free.com/2016/01/spring-security-spring-data-jpa.html




react inil:

https://kknews.cc/other/aee4g9n.html


redux :
https://www.ibm.com/developerworks/library/wa-manage-state-with-redux-p1-david-geary/

**very important react intl example with redux**
https://github.com/Tushant/react-intl/tree/e4037950a60d0cab73cb996feb5721e6c754369d/examples/react-intl-with-redux

git:

git add -A && git commit -m "put your comment"

git push -u origin master

backend run:
mvn clean install
mvn spring-boot:run


/////////////////////////// deploy shopui


#npm install;

how to update npm:
https://stackoverflow.com/questions/6237295/how-can-i-update-node-js-and-npm-to-the-next-versions


install node 4.2.6

tar --strip-components 1 -xzf /node-v4.2.6-linux-x64.tar.gz


////////////////////////// deploy shop

install openjdk 8 :
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get install openjdk-8-jdk
sudo update-alternatives --config java
sudo update-alternatives --config javac

https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts

install mysql:

https://dev.mysql.com/doc/refman/5.7/en/creating-database.html

install maven:

https://www.mkyong.com/maven/how-to-install-maven-in-ubuntu/


run shop

mvn clean install

mvn spring-boot:run

/////issue when deploy to remote ubuntu:

shop ui: need to change localhost to ip

shop:	need to modify security files : crudsconfig.java and myauthendicationsuccesshandler.java
	need to modify application.properties: change update to create

db realacted: do forget to import all initial data (two sql file : shop.sql and sql.txt)



///use screen to keep process runing after logout ssh remote connection


133
down vote
You could do that by using screen.

Type man screen to find out more or read this screen man page.

Simple scenario:

ssh into your remote box. Type screen Then start the process you want.
Press Ctrl-A then Ctrl-D. This will "detach" your screen session but leave your processes running. You can now log out of the remote box.
If you want to come back later, log on again and type screen -r This will "resume" your screen session, and you can see the output of your process.


ref: https://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session
http://gnailuy.com/linux/2011/07/24/beginning-gnu-screen/
























